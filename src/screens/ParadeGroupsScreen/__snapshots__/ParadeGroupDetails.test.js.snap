// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`when collapsed renders correctly with all fields 1`] = `
<Component
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 0,
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <Touchable
    accessibilityComponentType="button"
    accessibilityLabel="Show more"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    delayPressIn={50}
    onPress={[Function]}
    style={Object {}}
  >
    <AnimatedComponent
      source={1}
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "transform": Array [
              Object {
                "rotate": "90deg",
              },
            ],
          },
        ]
      }
    />
  </Touchable>
  <Component
    style={
      Object {
        "flex": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      type="h4"
    >
      A Test Parade Group
    </Text>
    <AnimatedComponent
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 4,
          },
        ]
      }
    >
      <Component
        style={
          Object {
            "minHeight": 32,
          }
        }
      >
        <Text
          color="blackColor"
          markdown={false}
          markdownStyle={Object {}}
          style={
            Object {
              "paddingTop": 8,
            }
          }
          type="text"
        >
          Section A
        </Text>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Facebook
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Twitter
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Website
          </TextLink>
        </Touchable>
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`when collapsed renders correctly with missing fields 1`] = `
<Component
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 0,
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <Touchable
    accessibilityComponentType="button"
    accessibilityLabel="Show more"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    delayPressIn={50}
    onPress={[Function]}
    style={Object {}}
  >
    <AnimatedComponent
      source={1}
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "transform": Array [
              Object {
                "rotate": "90deg",
              },
            ],
          },
        ]
      }
    />
  </Touchable>
  <Component
    style={
      Object {
        "flex": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      type="h4"
    >
      Test Parade Group
    </Text>
    <AnimatedComponent
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 4,
          },
        ]
      }
    >
      <Component
        style={
          Object {
            "minHeight": 32,
          }
        }
      >
        <Text
          color="blackColor"
          markdown={false}
          markdownStyle={Object {}}
          style={
            Object {
              "paddingTop": 8,
            }
          }
          type="text"
        >
          Section B
        </Text>
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`when expanded renders correctly 1`] = `
<Component
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 0,
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <Touchable
    accessibilityComponentType="button"
    accessibilityLabel="Show more"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    delayPressIn={50}
    onPress={[Function]}
    style={Object {}}
  >
    <AnimatedComponent
      source={1}
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "transform": Array [
              Object {
                "rotate": "90deg",
              },
            ],
          },
        ]
      }
    />
  </Touchable>
  <Component
    style={
      Object {
        "flex": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      type="h4"
    >
      A Test Parade Group
    </Text>
    <AnimatedComponent
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 4,
          },
        ]
      }
    >
      <Component
        style={
          Object {
            "minHeight": 32,
          }
        }
      >
        <Text
          color="blackColor"
          markdown={false}
          markdownStyle={Object {}}
          style={
            Object {
              "paddingTop": 8,
            }
          }
          type="text"
        >
          Section A
        </Text>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Facebook
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Twitter
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Website
          </TextLink>
        </Touchable>
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;

exports[`when expanded then collapsed renders correctly 1`] = `
<Component
  style={
    Object {
      "alignItems": "flex-start",
      "flex": 0,
      "flexDirection": "row",
      "flexGrow": 1,
      "flexShrink": 1,
    }
  }
>
  <Touchable
    accessibilityComponentType="button"
    accessibilityLabel="Show more"
    accessibilityTraits={
      Array [
        "button",
      ]
    }
    delayPressIn={50}
    onPress={[Function]}
    style={Object {}}
  >
    <AnimatedComponent
      source={1}
      style={
        Array [
          Object {
            "height": 24,
            "width": 24,
          },
          Object {
            "transform": Array [
              Object {
                "rotate": "90deg",
              },
            ],
          },
        ]
      }
    />
  </Touchable>
  <Component
    style={
      Object {
        "flex": 0,
        "flexDirection": "column",
        "flexGrow": 1,
        "flexShrink": 1,
        "paddingBottom": 10,
        "paddingTop": 10,
      }
    }
  >
    <Text
      color="blackColor"
      markdown={false}
      markdownStyle={Object {}}
      type="h4"
    >
      A Test Parade Group
    </Text>
    <AnimatedComponent
      style={
        Array [
          Object {
            "overflow": "hidden",
          },
          Object {
            "height": 4,
          },
        ]
      }
    >
      <Component
        style={
          Object {
            "minHeight": 32,
          }
        }
      >
        <Text
          color="blackColor"
          markdown={false}
          markdownStyle={Object {}}
          style={
            Object {
              "paddingTop": 8,
            }
          }
          type="text"
        >
          Section A
        </Text>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Facebook
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Twitter
          </TextLink>
        </Touchable>
        <Touchable
          accessibilityComponentType="button"
          accessibilityTraits={
            Array [
              "button",
            ]
          }
          delayPressIn={50}
          onPress={[Function]}
        >
          <TextLink>
            Website
          </TextLink>
        </Touchable>
      </Component>
    </AnimatedComponent>
  </Component>
</Component>
`;
