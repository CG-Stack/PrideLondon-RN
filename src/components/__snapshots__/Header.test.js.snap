// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header renders correctly with all props 1`] = `
<withOrientation
  accessibilityTraits={
    Array [
      "header",
    ]
  }
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "#2d2f7f",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
        "maxWidth": 440,
        "width": "100%",
      }
    }
  >
    <Component
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "marginRight": "auto",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Left
      </Text>
    </Component>
    <Component
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
          "paddingTop": 4,
        }
      }
    >
      <Text
        color="whiteColor"
        markdown={false}
        markdownStyle={Object {}}
        type="h2"
      >
        Center
      </Text>
    </Component>
    <Component
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
          "marginLeft": "auto",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Right
      </Text>
    </Component>
  </ContentPadding>
</withOrientation>
`;

exports[`Header renders correctly with default props 1`] = `
<withOrientation
  accessibilityTraits={
    Array [
      "header",
    ]
  }
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "#2d2f7f",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
        "maxWidth": 440,
        "width": "100%",
      }
    }
  >
    <Component
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "marginRight": "auto",
        }
      }
    />
    <Component
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
          "paddingTop": 4,
        }
      }
    >
      <Text
        color="whiteColor"
        markdown={false}
        markdownStyle={Object {}}
        type="h2"
      />
    </Component>
    <Component
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
          "marginLeft": "auto",
        }
      }
    />
  </ContentPadding>
</withOrientation>
`;

exports[`Header renders correctly with only onBack and rightElement 1`] = `
<withOrientation
  accessibilityTraits={
    Array [
      "header",
    ]
  }
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "#2d2f7f",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
        "maxWidth": 440,
        "width": "100%",
      }
    }
  >
    <Component
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "marginRight": "auto",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Left
      </Text>
    </Component>
    <Component
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
          "paddingTop": 4,
        }
      }
    >
      <Text
        color="whiteColor"
        markdown={false}
        markdownStyle={Object {}}
        type="h2"
      />
    </Component>
    <Component
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
          "marginLeft": "auto",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      >
        Right
      </Text>
    </Component>
  </ContentPadding>
</withOrientation>
`;

exports[`Header renders correctly with only title 1`] = `
<withOrientation
  accessibilityTraits={
    Array [
      "header",
    ]
  }
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "#2d2f7f",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "alignItems": "center",
        "alignSelf": "center",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
        "maxWidth": 440,
        "width": "100%",
      }
    }
  >
    <Component
      style={
        Object {
          "alignItems": "flex-start",
          "flex": 1,
          "marginRight": "auto",
        }
      }
    />
    <Component
      style={
        Object {
          "alignItems": "center",
          "flex": 0,
          "paddingTop": 4,
        }
      }
    >
      <Text
        color="whiteColor"
        markdown={false}
        markdownStyle={Object {}}
        type="h2"
      >
        Center
      </Text>
    </Component>
    <Component
      style={
        Object {
          "alignItems": "flex-end",
          "flex": 1,
          "marginLeft": "auto",
        }
      }
    />
  </ContentPadding>
</withOrientation>
`;

exports[`Header.BackButton renders correctly with default props 1`] = `
<IconButton
  accessibilityLabel="Back"
  onPress={[Function]}
  source={1}
/>
`;
