// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly with any date and any time (empty time set) 1`] = `
<withOrientation
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "rgb(45, 47, 127)",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={Object {}}
  >
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingTop": 16,
        }
      }
      testID="filter-header"
    >
      <FilterHeaderCategories
        onFilterPress={[Function]}
        selectedCategories={Set {}}
      />
    </View>
  </ContentPadding>
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "backgroundColor": "#20215a",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
      }
    }
  >
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Select dates"
    />
    <View
      style={
        Object {
          "borderColor": "#ffffff",
          "borderLeftWidth": 0.5,
        }
      }
    />
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Add filters"
    />
  </ContentPadding>
  <Connect(DateRangePickerDialog)
    onApply={[Function]}
    onCancel={[Function]}
    visible={false}
  />
</withOrientation>
`;

exports[`renders correctly with any date and any time 1`] = `
<withOrientation
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "rgb(45, 47, 127)",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={Object {}}
  >
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingTop": 16,
        }
      }
      testID="filter-header"
    >
      <FilterHeaderCategories
        onFilterPress={[Function]}
        selectedCategories={Set {}}
      />
    </View>
  </ContentPadding>
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "backgroundColor": "#20215a",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
      }
    }
  >
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Select dates"
    />
    <View
      style={
        Object {
          "borderColor": "#ffffff",
          "borderLeftWidth": 0.5,
        }
      }
    />
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Add filters"
    />
  </ContentPadding>
  <Connect(DateRangePickerDialog)
    onApply={[Function]}
    onCancel={[Function]}
    visible={false}
  />
</withOrientation>
`;

exports[`renders correctly with date range and two times 1`] = `
<withOrientation
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "rgb(45, 47, 127)",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={Object {}}
  >
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingTop": 16,
        }
      }
      testID="filter-header"
    >
      <FilterHeaderCategories
        onFilterPress={[Function]}
        selectedCategories={Set {}}
      />
    </View>
  </ContentPadding>
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "backgroundColor": "#20215a",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
      }
    }
  >
    <FilterHeaderButton
      active={true}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="2 Feb - 3 Feb"
    />
    <View
      style={
        Object {
          "borderColor": "#ffffff",
          "borderLeftWidth": 0.5,
        }
      }
    />
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Add filters"
    />
  </ContentPadding>
  <Connect(DateRangePickerDialog)
    onApply={[Function]}
    onCancel={[Function]}
    visible={false}
  />
</withOrientation>
`;

exports[`renders correctly with single date and single time 1`] = `
<withOrientation
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "rgb(45, 47, 127)",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={Object {}}
  >
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingTop": 16,
        }
      }
      testID="filter-header"
    >
      <FilterHeaderCategories
        onFilterPress={[Function]}
        selectedCategories={Set {}}
      />
    </View>
  </ContentPadding>
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "backgroundColor": "#20215a",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
      }
    }
  >
    <FilterHeaderButton
      active={true}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="2 Feb"
    />
    <View
      style={
        Object {
          "borderColor": "#ffffff",
          "borderLeftWidth": 0.5,
        }
      }
    />
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Add filters"
    />
  </ContentPadding>
  <Connect(DateRangePickerDialog)
    onApply={[Function]}
    onCancel={[Function]}
    visible={false}
  />
</withOrientation>
`;

exports[`renders correctly with tag filters selected 1`] = `
<withOrientation
  forceInset={
    Object {
      "top": "always",
    }
  }
  style={
    Object {
      "backgroundColor": "rgb(45, 47, 127)",
    }
  }
>
  <StatusBar
    animated={true}
    backgroundColor="#2d2f7f"
    barStyle="light-content"
    showHideTransition="fade"
  />
  <ContentPadding
    padding={Object {}}
    style={Object {}}
  >
    <View
      style={
        Object {
          "paddingBottom": 12,
          "paddingTop": 16,
        }
      }
      testID="filter-header"
    >
      <FilterHeaderCategories
        onFilterPress={[Function]}
        selectedCategories={Set {}}
      />
    </View>
  </ContentPadding>
  <ContentPadding
    padding={Object {}}
    style={
      Object {
        "backgroundColor": "#20215a",
        "flexDirection": "row",
        "height": 48,
        "justifyContent": "space-between",
      }
    }
  >
    <FilterHeaderButton
      active={false}
      badgeValue={null}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Select dates"
    />
    <View
      style={
        Object {
          "borderColor": "#ffffff",
          "borderLeftWidth": 0.5,
        }
      }
    />
    <FilterHeaderButton
      active={true}
      badgeValue={2}
      onPress={[Function]}
      style={
        Object {
          "flex": 1,
        }
      }
      text="Filters"
    />
  </ContentPadding>
  <Connect(DateRangePickerDialog)
    onApply={[Function]}
    onCancel={[Function]}
    visible={false}
  />
</withOrientation>
`;
